name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger the workflow on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Use Temurin distribution for JDK

      - name: Build with Maven
        run: mvn clean package --file pom.xml

      #      - name: Build with maven
      #        run: mvn clean compile

      - name: Build Docker image
        run: docker build -t book-my-flight-app .

#      - name: Log in to Docker Hub
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#
#      - name: Push Docker image to Docker Hub
#        run: docker push book-my-flight-app

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build # Ensure the build job is completed successfully before deploying
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Deploy to Server
#        env:
#          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
#          SERVER_USER: ${{ secrets.SERVER_USER }}
#          SERVER_HOST: ${{ secrets.SERVER_HOST }}
#        run: |
#          echo "${SERVER_SSH_KEY}" > key.pem
#          chmod 600 key.pem
#          ssh -o StrictHostKeyChecking=no -i key.pem $SERVER_USER@$SERVER_HOST "
#            docker pull book-my-flight-app &&
#            docker stop bookMyFlight-app || true &&
#            docker rm bookMyFlight-app || true &&
#            docker run -d --name bookMyFlight-app -p 3001:3001 book-my-flight-app
#          "